name: Build, Release, and Push Docker Image

on:
  release:
    types: [created]  # 触发条件：创建 Release 时运行

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux]  # 需要构建的操作系统 windows, darwin
        arch: [amd64, arm64]          # 需要支持的架构
        exclude:
          - os: windows
            arch: arm64  # Windows 不支持 arm64
          - os: darwin
            arch: amd64  # macOS 主要使用 arm64 (M1/M2)

    steps:
      # 1️⃣ 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2

      # 3️⃣ 获取 GitHub Release 版本号
      - name: Get Release Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # 4️⃣ 编译 Golang 二进制文件
      - name: Build Go Application
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_ENABLED=0 go build -o app-${{ matrix.os }}-${{ matrix.arch }}

      # 5️⃣ 上传二进制文件到 GitHub Release
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: cf-analytics-${{ matrix.os }}-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: build-and-release  # 先完成编译和上传 Release 资产，再执行 Docker 构建
    steps:
      # 1️⃣ 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ 获取 GitHub Release 版本号
      - name: Get Release Version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      # 3️⃣ 登录 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4️⃣ 设置 Docker Buildx（支持多架构构建）
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 5️⃣ 构建和推送 Docker 镜像
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/cf-analytics:latest
            ${{ secrets.DOCKER_USERNAME }}/cf-analytics:${{ env.VERSION }}
